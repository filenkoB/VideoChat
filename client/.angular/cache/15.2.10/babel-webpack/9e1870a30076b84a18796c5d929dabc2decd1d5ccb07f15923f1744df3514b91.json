{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nimport { ParticipantComponent } from '../participant/participant.component';\nimport { Subscription } from 'rxjs';\nimport { RtcParticipant } from 'src/model/rtc-participant';\nlet ConferenceMainComponent = class ConferenceMainComponent {\n  constructor(_signalR) {\n    this._signalR = _signalR;\n    this._subscriptions = new Subscription();\n    this.participants = [];\n    this.userId = crypto.randomUUID();\n    this.userName = this._getNameFromCookies();\n    this._initEvents();\n  }\n  _initEvents() {\n    this._subscriptions.add(this._signalR.onConnected$.subscribe(this._onConnectedHandler.bind(this)));\n    this._subscriptions.add(this._signalR.getParticipants$.subscribe(this._getParticipantsHandler.bind(this)));\n    this._subscriptions.add(this._signalR.onNewConnection$.subscribe(participant => {\n      this.participants.push(new RtcParticipant(new MediaStream(), participant.id, participant.name));\n    }));\n    this._subscriptions.add(this._signalR.onRemoveConnection$.subscribe(participant => {\n      let index = this.participants.findIndex(p => p.id === participant.id);\n      this.participants.splice(index, 1);\n    }));\n    this._subscriptions.add(this._signalR.onToggleMicrophone$.subscribe(event => {\n      let participantCmp = this.participantElements.find(c => c.participant.id === event.userId);\n      if (participantCmp) {\n        participantCmp.isMicroActive = event.isActive;\n      }\n    }));\n  }\n  _getNameFromCookies() {\n    let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + \"name\".replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n    return decodeURIComponent(matches[1]);\n  }\n  _onConnectedHandler() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log(`Id: ${_this.userId} Name: ${_this.userName} - connected succesfully`);\n      _this.participants.push(new RtcParticipant(yield _this._getMediaStream(), _this.userId, _this.userName));\n      _this._signalR.getParticipants();\n    })();\n  }\n  _getParticipantsHandler(participants) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.participants = [_this2.participants[0], ...participants.map(p => new RtcParticipant(new MediaStream(), p.id, p.name))];\n    })();\n  }\n  _getMediaStream() {\n    return _asyncToGenerator(function* () {\n      return navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 800\n          },\n          height: {\n            ideal: 600\n          }\n        },\n        audio: false\n      });\n    })();\n  }\n  ngOnInit() {\n    this._signalR.startConnection(this.userId, this.userName);\n  }\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n  }\n};\n__decorate([ViewChild(\"controls\")], ConferenceMainComponent.prototype, \"inputControls\", void 0);\n__decorate([ViewChildren(ParticipantComponent)], ConferenceMainComponent.prototype, \"participantElements\", void 0);\nConferenceMainComponent = __decorate([Component({\n  selector: 'app-conference-main',\n  templateUrl: './conference-main.component.html',\n  styleUrls: ['./conference-main.component.scss']\n})], ConferenceMainComponent);\nexport { ConferenceMainComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ViewChildren","ParticipantComponent","Subscription","RtcParticipant","ConferenceMainComponent","constructor","_signalR","userId","crypto","randomUUID","userName","_getNameFromCookies","_initEvents","_subscriptions","add","onConnected$","subscribe","_onConnectedHandler","bind","getParticipants$","_getParticipantsHandler","onNewConnection$","participant","participants","push","MediaStream","id","name","onRemoveConnection$","index","findIndex","p","splice","onToggleMicrophone$","event","participantCmp","participantElements","find","c","isMicroActive","isActive","matches","document","cookie","match","RegExp","replace","decodeURIComponent","console","log","_getMediaStream","getParticipants","map","navigator","mediaDevices","getUserMedia","video","width","ideal","height","audio","ngOnInit","startConnection","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\app\\conference-main\\conference-main.component.ts"],"sourcesContent":["import { Component, Input, ViewChild, OnChanges, OnInit, ViewChildren, QueryList, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy } from '@angular/core';\nimport { ParticipantComponent } from '../participant/participant.component';\nimport { Participant } from 'src/model/participant';\nimport { SignalRService } from 'src/service/signalr.service';\nimport { InputControlsComponent } from '../input-controls/input-controls.component';\nimport { ToggleMicroEvent } from 'src/model/toggle-micro';\nimport { Subscription } from 'rxjs';\nimport { RtcParticipant } from 'src/model/rtc-participant';\n\n@Component({\n  selector: 'app-conference-main',\n  templateUrl: './conference-main.component.html',\n  styleUrls: ['./conference-main.component.scss']\n})\nexport class ConferenceMainComponent implements OnInit, OnDestroy {\n  private _subscriptions = new Subscription();\n\n  public userId!: string;\n  public userName!: string;\n\n  @ViewChild(\"controls\") public inputControls! : InputControlsComponent;\n  @ViewChildren(ParticipantComponent) public participantElements! : QueryList<ParticipantComponent>;\n\n  public participants: RtcParticipant[] = [];\n\n\n  constructor(\n    private readonly _signalR: SignalRService) {\n    this.userId = crypto.randomUUID();\n    this.userName = this._getNameFromCookies();\n    this._initEvents();\n  }\n\n  private _initEvents(): void {\n    this._subscriptions.add(this._signalR.onConnected$.subscribe(this._onConnectedHandler.bind(this)));\n    this._subscriptions.add(this._signalR.getParticipants$.subscribe(this._getParticipantsHandler.bind(this)));\n    this._subscriptions.add(this._signalR.onNewConnection$.subscribe((participant: Participant) => {\n      this.participants.push(new RtcParticipant(new MediaStream(), participant.id, participant.name));\n    }));\n    this._subscriptions.add(this._signalR.onRemoveConnection$.subscribe((participant: Participant) => {\n      let index = this.participants.findIndex(p => p.id === participant.id);\n      this.participants.splice(index, 1);\n    }));\n    this._subscriptions.add(this._signalR.onToggleMicrophone$.subscribe((event: ToggleMicroEvent) => {\n      let participantCmp = this.participantElements.find(c => c.participant.id === event.userId);\n      if (participantCmp) {\n        participantCmp.isMicroActive = event.isActive;\n      }\n    }));\n  }\n\n  private _getNameFromCookies(): string {\n    let matches = document.cookie.match(new RegExp(\n      \"(?:^|; )\" + \"name\".replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ))\n    return decodeURIComponent(matches![1]);\n  }\n\n  private async _onConnectedHandler() {\n    console.log(`Id: ${this.userId} Name: ${this.userName} - connected succesfully`);\n    this.participants.push(new RtcParticipant(await this._getMediaStream(), this.userId, this.userName));\n    this._signalR.getParticipants();\n  }\n\n  private async _getParticipantsHandler(participants: Participant[]) {\n    this.participants = [ this.participants[0], ...participants.map(p => new RtcParticipant(new MediaStream(), p.id, p.name)) ];\n  }\n\n  private async _getMediaStream(): Promise<MediaStream> {\n    return navigator.mediaDevices.getUserMedia({\n      video: {\n        width: { ideal: 800 },\n        height: { ideal: 600 }\n      },\n      audio: false\n    });\n  }\n\n  public ngOnInit() {\n    this._signalR.startConnection(this.userId, this.userName);\n  }\n\n  public ngOnDestroy(): void {\n    this._subscriptions.unsubscribe();  \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}