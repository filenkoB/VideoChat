{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nexport class SignalR {\n  static #_ = this.connection = new HubConnectionBuilder().withUrl(\"http://localhost:5555/conference\").build();\n  static connect() {\n    return _asyncToGenerator(function* () {})();\n  }\n  static startConnection(userId, userName) {\n    return _asyncToGenerator(function* () {\n      SignalR.connection.send(\"Connect\", {\n        id: userId,\n        name: userName\n      });\n      SignalR.connection.on(\"Connected\", () => {\n        console.log(`Id: ${userId} Name: ${userName} - connected succesfully`);\n        SignalR.connection.off(\"Connected\");\n      });\n    })();\n  }\n}","map":{"version":3,"mappings":";AAAA,SAAwBA,oBAAoB,QAAQ,oBAAoB;AAExE,OAAM,MAAOC,OAAO;EAAA,YACF,eAAU,GAAkB,IAAID,oBAAoB,EAAE,CAC/DE,OAAO,CAAC,kCAAkC,CAAC,CAACC,KAAK,EAAE;EAEjD,OAAaC,OAAO;IAAA;EAE3B;EAEO,OAAaC,eAAe,CAACC,MAAc,EAAEC,QAAgB;IAAA;MAChEN,OAAO,CAACO,UAAU,CAACC,IAAI,CAAC,SAAS,EAAE;QAAEC,EAAE,EAAEJ,MAAM;QAAEK,IAAI,EAAEJ;MAAQ,CAAE,CAAC;MAClEN,OAAO,CAACO,UAAU,CAACI,EAAE,CAAC,WAAW,EAAE,MAAK;QACpCC,OAAO,CAACC,GAAG,CAAC,OAAOR,MAAM,UAAUC,QAAQ,0BAA0B,CAAC;QACtEN,OAAO,CAACO,UAAU,CAACO,GAAG,CAAC,WAAW,CAAC;MACvC,CAAC,CAAC;IAAC;EACP","names":["HubConnectionBuilder","SignalR","withUrl","build","connect","startConnection","userId","userName","connection","send","id","name","on","console","log","off"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\service\\signalr.utils.ts"],"sourcesContent":["import { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\";\r\n\r\nexport class SignalR {\r\n    public static connection: HubConnection = new HubConnectionBuilder()\r\n        .withUrl(\"http://localhost:5555/conference\").build();\r\n        \r\n    public static async connect() {\r\n        \r\n    }\r\n\r\n    public static async startConnection(userId: string, userName: string) {\r\n        SignalR.connection.send(\"Connect\", { id: userId, name: userName });\r\n        SignalR.connection.on(\"Connected\", () => {\r\n            console.log(`Id: ${userId} Name: ${userName} - connected succesfully`);\r\n            SignalR.connection.off(\"Connected\");\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}