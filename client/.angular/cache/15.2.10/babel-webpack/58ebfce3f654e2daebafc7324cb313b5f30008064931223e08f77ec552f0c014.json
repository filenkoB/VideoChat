{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport class ConferencePeer {\n  get localDescription() {\n    return this._peer.localDescription;\n  }\n  constructor(_input, _output, _sharing) {\n    this._input = _input;\n    this._output = _output;\n    this._sharing = _sharing;\n    this._peerConnectionConfig = {\n      iceServers: [{\n        urls: \"stun:stun.services.mozilla.com\"\n      }, {\n        urls: \"stun:stun.l.google.com:19302\"\n      }, {\n        urls: \"stun:stun.awt.be:3478\"\n      }, {\n        urls: \"stun:stun.b2b2c.ca:3478\"\n      }, {\n        urls: \"stun:stun.bahnhof.net:3478\"\n      }, {\n        urls: \"stun:stun.barracuda.com:3478\"\n      }, {\n        urls: \"stun:stun.bluesip.net:3478\"\n      }, {\n        urls: \"stun:stun.bmwgs.cz:3478\"\n      }, {\n        urls: \"stun:stun.botonakis.com:3478\"\n      }, {\n        urls: \"stun:stun.budgetphone.nl:3478\"\n      }, {\n        urls: \"stun:stun.cablenet-as.net:3478\"\n      }]\n    };\n    this._initPeer();\n  }\n  _initPeer() {\n    this._peer = new RTCPeerConnection(this._peerConnectionConfig);\n    this._input.getTracks().forEach(track => {\n      this._peer.addTrack(track, this._input);\n    });\n    this._peer.ontrack = event => {\n      if (!event.streams[0]) {\n        this._sharing.addTrack(event.track);\n      }\n      event.streams[0].getTracks().forEach(track => {\n        this._output.addTrack(track);\n      });\n    };\n  }\n  onCandidate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this._peer.onicecandidate = event => {\n          if (event.candidate != null) {\n            resolve(event);\n          }\n        };\n      });\n    })();\n  }\n  createOffer() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2._peer?.createOffer();\n    })();\n  }\n  setLocalDescription(description) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3._peer?.setLocalDescription(description);\n    })();\n  }\n  addTrack(track, ...streams) {\n    this._peer?.addTrack(track, ...streams);\n  }\n}","map":{"version":3,"mappings":";AAAA,OAAM,MAAOA,cAAc;EAmBvB,IAAWC,gBAAgB;IACvB,OAAO,IAAI,CAACC,KAAM,CAACD,gBAAiB;EACxC;EAEAE,YACqBC,MAAmB,EACnBC,OAAoB,EACpBC,QAAqB;IAFrB,WAAM,GAANF,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,aAAQ,GAARC,QAAQ;IAzBZ,0BAAqB,GAAI;MACtCC,UAAU,EAAE,CACV;QAAEC,IAAI,EAAE;MAAgC,CAAE,EAC1C;QAAEA,IAAI,EAAE;MAA8B,CAAE,EACxC;QAAEA,IAAI,EAAE;MAAuB,CAAE,EACjC;QAAEA,IAAI,EAAE;MAAyB,CAAE,EACnC;QAAEA,IAAI,EAAE;MAA4B,CAAE,EACtC;QAAEA,IAAI,EAAE;MAA8B,CAAE,EACxC;QAAEA,IAAI,EAAE;MAA4B,CAAE,EACtC;QAAEA,IAAI,EAAE;MAAyB,CAAE,EACnC;QAAEA,IAAI,EAAE;MAA8B,CAAE,EACxC;QAAEA,IAAI,EAAE;MAA+B,CAAE,EACzC;QAAEA,IAAI,EAAE;MAAgC,CAAE;KAE/C;IAaG,IAAI,CAACC,SAAS,EAAE;EACpB;EAEQA,SAAS;IACb,IAAI,CAACP,KAAK,GAAG,IAAIQ,iBAAiB,CAAC,IAAI,CAACC,qBAAqB,CAAC;IAC9D,IAAI,CAACP,MAAM,CAACQ,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;MACtC,IAAI,CAACZ,KAAM,CAACa,QAAQ,CAACD,KAAK,EAAE,IAAI,CAACV,MAAM,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAI,CAACF,KAAK,CAACc,OAAO,GAAIC,KAAK,IAAI;MAC3B,IAAI,CAACA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;QACnB,IAAI,CAACZ,QAAQ,CAACS,QAAQ,CAACE,KAAK,CAACH,KAAK,CAAC;;MAEvCG,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACN,SAAS,EAAE,CAACC,OAAO,CAACC,KAAK,IAAG;QACzC,IAAI,CAACT,OAAO,CAACU,QAAQ,CAACD,KAAK,CAAC;MAChC,CAAC,CAAC;IACN,CAAC;EACL;EAEaK,WAAW;IAAA;IAAA;MACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QACnC,KAAI,CAACpB,KAAM,CAACqB,cAAc,GAAIN,KAAK,IAAI;UACnC,IAAIA,KAAK,CAACO,SAAS,IAAI,IAAI,EAAE;YACzBH,OAAO,CAACJ,KAAK,CAAC;;QAEtB,CAAC;MACL,CAAC,CAAC;IAAC;EACP;EAEaQ,WAAW;IAAA;IAAA;MACpB,OAAO,MAAI,CAACvB,KAAK,EAAEuB,WAAW,EAAG;IAAC;EACtC;EAEaC,mBAAmB,CAACC,WAAgB;IAAA;IAAA;MAC7C,OAAO,MAAI,CAACzB,KAAK,EAAEwB,mBAAmB,CAACC,WAAW,CAAC;IAAC;EACxD;EAEOZ,QAAQ,CAACD,KAAuB,EAAE,GAAGI,OAAsB;IAC9D,IAAI,CAAChB,KAAK,EAAEa,QAAQ,CAACD,KAAK,EAAE,GAAGI,OAAO,CAAC;EAC3C","names":["ConferencePeer","localDescription","_peer","constructor","_input","_output","_sharing","iceServers","urls","_initPeer","RTCPeerConnection","_peerConnectionConfig","getTracks","forEach","track","addTrack","ontrack","event","streams","onCandidate","Promise","resolve","reject","onicecandidate","candidate","createOffer","setLocalDescription","description"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\model\\conference-peer.ts"],"sourcesContent":["export class ConferencePeer {\r\n    private readonly _peerConnectionConfig =  {\r\n        iceServers: [\r\n          { urls: \"stun:stun.services.mozilla.com\" },\r\n          { urls: \"stun:stun.l.google.com:19302\" },\r\n          { urls: \"stun:stun.awt.be:3478\" },\r\n          { urls: \"stun:stun.b2b2c.ca:3478\" },\r\n          { urls: \"stun:stun.bahnhof.net:3478\" },\r\n          { urls: \"stun:stun.barracuda.com:3478\" },\r\n          { urls: \"stun:stun.bluesip.net:3478\" },\r\n          { urls: \"stun:stun.bmwgs.cz:3478\" },\r\n          { urls: \"stun:stun.botonakis.com:3478\" },\r\n          { urls: \"stun:stun.budgetphone.nl:3478\" },\r\n          { urls: \"stun:stun.cablenet-as.net:3478\" }\r\n        ]\r\n    };\r\n\r\n    private _peer?: RTCPeerConnection;\r\n\r\n    public get localDescription() : RTCSessionDescription {\r\n        return this._peer!.localDescription!;\r\n    }\r\n\r\n    constructor(\r\n        private readonly _input: MediaStream,\r\n        private readonly _output: MediaStream,\r\n        private readonly _sharing: MediaStream\r\n    ) {\r\n        this._initPeer();\r\n    }\r\n\r\n    private _initPeer() {\r\n        this._peer = new RTCPeerConnection(this._peerConnectionConfig);\r\n        this._input.getTracks().forEach((track) => {\r\n            this._peer!.addTrack(track, this._input);\r\n        });\r\n\r\n        this._peer.ontrack = (event) => {\r\n            if (!event.streams[0]) {\r\n                this._sharing.addTrack(event.track);\r\n            }\r\n            event.streams[0].getTracks().forEach(track => {\r\n                this._output.addTrack(track);\r\n            });\r\n        }\r\n    }\r\n\r\n    public async onCandidate(): Promise<RTCPeerConnectionIceEvent> {\r\n        return new Promise((resolve, reject) => {\r\n            this._peer!.onicecandidate = (event) => {\r\n                if (event.candidate != null) {\r\n                    resolve(event);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public async createOffer(): Promise<RTCSessionDescriptionInit> {\r\n        return this._peer?.createOffer()!;\r\n    }\r\n\r\n    public async setLocalDescription(description: any): Promise<void> {\r\n        return this._peer?.setLocalDescription(description);\r\n    }\r\n\r\n    public addTrack(track: MediaStreamTrack, ...streams: MediaStream[]) {\r\n        this._peer?.addTrack(track, ...streams);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}