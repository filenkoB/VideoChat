{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/Semantic/FootballGuide/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport class ConferencePeer {\n  get localDescription() {\n    return this._peer.localDescription;\n  }\n  constructor(_input, _output, _sharingStream) {\n    this._input = _input;\n    this._output = _output;\n    this._sharingStream = _sharingStream;\n    this._peerConnectionConfig = {\n      iceServers: [{\n        urls: \"stun:stun.services.mozilla.com\"\n      }, {\n        urls: \"stun:stun.l.google.com:19302\"\n      }, {\n        urls: \"stun:stun.awt.be:3478\"\n      }, {\n        urls: \"stun:stun.b2b2c.ca:3478\"\n      }, {\n        urls: \"stun:stun.bahnhof.net:3478\"\n      }, {\n        urls: \"stun:stun.barracuda.com:3478\"\n      }, {\n        urls: \"stun:stun.bluesip.net:3478\"\n      }, {\n        urls: \"stun:stun.bmwgs.cz:3478\"\n      }, {\n        urls: \"stun:stun.botonakis.com:3478\"\n      }, {\n        urls: \"stun:stun.budgetphone.nl:3478\"\n      }, {\n        urls: \"stun:stun.cablenet-as.net:3478\"\n      }]\n    };\n    this._initPeer();\n  }\n  _onTrack(event) {\n    let tracks = event.streams[0].getTracks();\n    tracks.slice(0, tracks.length).forEach(track => {\n      this._output.addTrack(track);\n    });\n    if (event.streams[1]) {\n      event.streams[1].getTracks().forEach(track => {\n        this._sharingStream.addTrack(track);\n      });\n    }\n  }\n  _initPeer() {\n    this._peer = new RTCPeerConnection(this._peerConnectionConfig);\n    this._input.getTracks().forEach(track => {\n      this._peer.addTrack(track, this._input);\n    });\n    this._peer.ontrack = this._onTrack.bind(this);\n  }\n  onCandidate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this._peer.onicecandidate = event => {\n          if (event.candidate != null) {\n            resolve(event);\n          }\n        };\n      });\n    })();\n  }\n  createOffer() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2._peer?.createOffer();\n    })();\n  }\n  createAnswer() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3._peer?.createAnswer();\n    })();\n  }\n  setLocalDescription(description) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4._peer?.setLocalDescription(description);\n    })();\n  }\n  addTrack(track, ...streams) {\n    return this._peer?.addTrack(track, ...streams);\n  }\n  setRemoteDescription(description) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return _this5._peer?.setRemoteDescription(description);\n    })();\n  }\n  addIceCandidate(candidate) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return _this6._peer?.addIceCandidate(candidate);\n    })();\n  }\n  close() {\n    this._peer?.close();\n  }\n}","map":{"version":3,"mappings":"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","names":["ConferencePeer","localDescription","_peer","constructor","_input","_output","_sharingStream","iceServers","urls","_initPeer","_onTrack","event","tracks","streams","getTracks","slice","length","forEach","track","addTrack","RTCPeerConnection","_peerConnectionConfig","ontrack","bind","onCandidate","Promise","resolve","reject","onicecandidate","candidate","createOffer","createAnswer","setLocalDescription","description","setRemoteDescription","addIceCandidate","close"],"sourceRoot":"","sources":["D:\\Лабки\\Semantic\\FootballGuide\\VideoChat\\client\\src\\model\\conference-peer.ts"],"sourcesContent":["export class ConferencePeer {\r\n    private readonly _peerConnectionConfig =  {\r\n        iceServers: [\r\n          { urls: \"stun:stun.services.mozilla.com\" },\r\n          { urls: \"stun:stun.l.google.com:19302\" },\r\n          { urls: \"stun:stun.awt.be:3478\" },\r\n          { urls: \"stun:stun.b2b2c.ca:3478\" },\r\n          { urls: \"stun:stun.bahnhof.net:3478\" },\r\n          { urls: \"stun:stun.barracuda.com:3478\" },\r\n          { urls: \"stun:stun.bluesip.net:3478\" },\r\n          { urls: \"stun:stun.bmwgs.cz:3478\" },\r\n          { urls: \"stun:stun.botonakis.com:3478\" },\r\n          { urls: \"stun:stun.budgetphone.nl:3478\" },\r\n          { urls: \"stun:stun.cablenet-as.net:3478\" }\r\n        ]\r\n    };\r\n\r\n    private _peer?: RTCPeerConnection;\r\n\r\n    public get localDescription() : RTCSessionDescription {\r\n        return this._peer!.localDescription!;\r\n    }\r\n\r\n    constructor(\r\n        private readonly _input: MediaStream,\r\n        private _output: MediaStream,\r\n        private _sharingStream: MediaStream\r\n    ) {\r\n        this._initPeer();\r\n    }\r\n\r\n    private _onTrack(event: RTCTrackEvent) {\r\n        let tracks = event.streams[0].getTracks();\r\n        tracks.slice(0, tracks.length).forEach(track => {\r\n            this._output.addTrack(track);\r\n        });\r\n        if (event.streams[1]) {\r\n            event.streams[1].getTracks().forEach(track => {\r\n                this._sharingStream.addTrack(track);\r\n            });\r\n        }\r\n    } \r\n\r\n    private _initPeer() {\r\n        this._peer = new RTCPeerConnection(this._peerConnectionConfig);\r\n        this._input.getTracks().forEach((track) => {\r\n            this._peer!.addTrack(track, this._input);\r\n        });\r\n\r\n        this._peer.ontrack = this._onTrack.bind(this);\r\n    }\r\n\r\n    public async onCandidate(): Promise<RTCPeerConnectionIceEvent> {\r\n        return new Promise((resolve, reject) => {\r\n            this._peer!.onicecandidate = (event) => {\r\n                if (event.candidate != null) {\r\n                    resolve(event);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public async createOffer(): Promise<RTCSessionDescriptionInit> {\r\n        return this._peer?.createOffer()!;\r\n    }\r\n\r\n    public async createAnswer(): Promise<RTCSessionDescriptionInit> {\r\n        return this._peer?.createAnswer()!;\r\n    }\r\n\r\n    public async setLocalDescription(description: any): Promise<void> {\r\n        return this._peer?.setLocalDescription(description);\r\n    }\r\n\r\n    public addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender {\r\n        return this._peer?.addTrack(track, ...streams)!;\r\n    }\r\n\r\n    public async setRemoteDescription(description: any): Promise<void> {\r\n        return this._peer?.setRemoteDescription(description)!;\r\n    }\r\n\r\n    public async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\r\n        return this._peer?.addIceCandidate(candidate)!;\r\n    }\r\n\r\n    public close(): void {\r\n        this._peer?.close();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}