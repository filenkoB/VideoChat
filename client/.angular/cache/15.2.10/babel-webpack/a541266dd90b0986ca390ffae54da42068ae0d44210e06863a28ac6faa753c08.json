{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class RtcService {\n  createPeer(stream, outputStream) {\n    let peer = new RTCPeerConnection();\n    stream.getTracks().forEach(track => {\n      peer.addTrack(track, stream);\n    });\n    peer.ontrack = event => {\n      event.streams[0].getTracks().forEach(track => {\n        stream.addTrack(track);\n      });\n    };\n    return peer;\n  }\n  getMediaStream() {\n    return _asyncToGenerator(function* () {\n      return navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 800\n          },\n          height: {\n            ideal: 600\n          }\n        },\n        audio: false\n      });\n    })();\n  }\n  static #_ = this.ɵfac = function RtcService_Factory(t) {\n    return new (t || RtcService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RtcService,\n    factory: RtcService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;AAGA,OAAM,MAAOA,UAAU;EACZC,UAAU,CAACC,MAAmB,EAAEC,YAAyB;IAC5D,IAAIC,IAAI,GAAG,IAAIC,iBAAiB,EAAE;IAClCH,MAAM,CAACI,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;MACnCJ,IAAI,CAACK,QAAQ,CAACD,KAAK,EAAEN,MAAM,CAAC;IAC9B,CAAC,CAAC;IACFE,IAAI,CAACM,OAAO,GAAIC,KAAK,IAAI;MACvBA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACN,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;QAC7CN,MAAM,CAACO,QAAQ,CAACD,KAAK,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC;IACD,OAAOJ,IAAI;EACf;EAEaS,cAAc;IAAA;MACvB,OAAOC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACzCC,KAAK,EAAE;UACLC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAG,CAAE;UACrBC,MAAM,EAAE;YAAED,KAAK,EAAE;UAAG;SACrB;QACDE,KAAK,EAAE;OACR,CAAC;IAAC;EACL;EAAC;qBAtBMrB,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAsB,SAAVtB,UAAU;IAAAuB,YADG;EAAM","names":["RtcService","createPeer","stream","outputStream","peer","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","getMediaStream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","audio","factory","providedIn"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\service\\rtc.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RtcService {\r\n    public createPeer(stream: MediaStream, outputStream: MediaStream): RTCPeerConnection {\r\n        let peer = new RTCPeerConnection();\r\n        stream.getTracks().forEach((track) => {\r\n          peer.addTrack(track, stream);\r\n        });\r\n        peer.ontrack = (event) => {\r\n          event.streams[0].getTracks().forEach((track) => {\r\n            stream.addTrack(track);\r\n          });\r\n        };\r\n        return peer;\r\n    }\r\n\r\n    public async getMediaStream(): Promise<MediaStream> {\r\n        return navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            width: { ideal: 800 },\r\n            height: { ideal: 600 }\r\n          },\r\n          audio: false\r\n        });\r\n      }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}