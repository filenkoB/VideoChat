{"ast":null,"code":"import { ParticipantComponent } from '../participant/participant.component';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/service/conference.service\";\nimport * as i2 from \"src/service/rtc.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../participant/participant.component\";\nimport * as i5 from \"../input-controls/input-controls.component\";\nconst _c0 = [\"controls\"];\nfunction ConferenceMainComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"app-participant\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const participant_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"participant\", participant_r2);\n  }\n}\nexport class ConferenceMainComponent {\n  constructor(_conferenceService, _rtcService) {\n    this._conferenceService = _conferenceService;\n    this._rtcService = _rtcService;\n    this._subscriptions = new Subscription();\n    this.participants = [];\n    this.userId = crypto.randomUUID();\n    this.userName = this._getNameFromCookies();\n    this._initEvents();\n  }\n  _initEvents() {\n    this._subscriptions.add(this._conferenceService.onConnected$.subscribe(() => {\n      console.log(`Id: ${this.userId} Name: ${this.userName} - connected succesfully`);\n      this._conferenceService.getParticipants();\n    }));\n    this._subscriptions.add(this._conferenceService.getParticipants$.subscribe(participants => {\n      this.participants = participants;\n    }));\n    this._subscriptions.add(this._conferenceService.onNewConnection$.subscribe(participant => {\n      this.participants.push(participant);\n    }));\n    this._subscriptions.add(this._conferenceService.onRemoveConnection$.subscribe(participant => {\n      let index = this.participants.findIndex(p => p.id === participant.id);\n      this.participants.splice(index, 1);\n    }));\n    this._subscriptions.add(this._conferenceService.onToggleMicrophone$.subscribe(event => {\n      let participantCmp = this.participantElements.find(c => c.participant.id === event.userId);\n      if (participantCmp) {\n        participantCmp.isMicroActive = event.isActive;\n      }\n    }));\n    this._subscriptions.add(this._conferenceService.onSendSignal$.subscribe(signal => {\n      //this._rtcService.signalPeer()\n    }));\n    this._subscriptions.add(this._rtcService.users$?.subscribe(participants => {}));\n  }\n  _getNameFromCookies() {\n    let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + \"name\".replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n    return decodeURIComponent(matches[1]);\n  }\n  ngOnInit() {\n    this._conferenceService.startConnection(this.userId, this.userName);\n  }\n  ngAfterViewChecked() {\n    if (this.participantElements) {\n      this.inputControls.currentParticipant = this.participantElements.first;\n    }\n  }\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ConferenceMainComponent_Factory(t) {\n    return new (t || ConferenceMainComponent)(i0.ɵɵdirectiveInject(i1.ConferenceService), i0.ɵɵdirectiveInject(i2.RtcService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConferenceMainComponent,\n    selectors: [[\"app-conference-main\"]],\n    viewQuery: function ConferenceMainComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(ParticipantComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControls = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.participantElements = _t);\n      }\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"id\", \"conference-container\"], [\"id\", \"participants-container\"], [\"class\", \"participant\", 4, \"ngFor\", \"ngForOf\"], [\"controls\", \"\"], [1, \"participant\"], [3, \"participant\"]],\n    template: function ConferenceMainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ConferenceMainComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"app-input-controls\", null, 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.participants);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ParticipantComponent, i5.InputControlsComponent],\n    styles: [\"#conference-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  padding: 2% 5% 0;\\n  background-color: rgba(27, 25, 25, 0.8470588235);\\n}\\n#conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  width: 100%;\\n  height: 90%;\\n}\\n#conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(1), #conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(1)    ~ *[_ngcontent-%COMP%] {\\n  flex: 0 0 100%;\\n}\\n#conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%] {\\n  flex: 0 0 calc((100% - 10px) / 3);\\n  background-color: rgba(101, 101, 101, 0.7647058824);\\n  border-radius: 5px;\\n  box-shadow: 1px 1px 5px #171717;\\n}\\n#conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(2), #conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(2)    ~ *[_ngcontent-%COMP%], #conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(4), #conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(4)    ~ *[_ngcontent-%COMP%] {\\n  flex: 0 0 calc((100% - 5px) / 2);\\n}\\n#conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(8), #conference-container[_ngcontent-%COMP%]   #participants-container[_ngcontent-%COMP%]   .participant[_ngcontent-%COMP%]:first-child:nth-last-child(8)    ~ *[_ngcontent-%COMP%] {\\n  flex: 0 0 calc((100% - 15px) / 4);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29uZmVyZW5jZS1tYWluL2NvbmZlcmVuY2UtbWFpbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLyVEMCU5QiVEMCVCMCVEMCVCMSVEMCVCQSVEMCVCOC9WaWRlb0NoYXQvY2xpZW50L3NyYy9hcHAvY29uZmVyZW5jZS1tYWluL2NvbmZlcmVuY2UtbWFpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnREFBQTtBQ0NKO0FEQ0k7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtBQ0NSO0FEQ1E7O0VBRUksY0FBQTtBQ0NaO0FERVE7RUFDSSxpQ0FBQTtFQUNBLG1EQUFBO0VBQ0Esa0JBQUE7RUFDQSwrQkFBQTtBQ0FaO0FER1E7Ozs7RUFJSSxnQ0FBQTtBQ0RaO0FESVE7O0VBRUksaUNBQUE7QUNGWiIsInNvdXJjZXNDb250ZW50IjpbIiNjb25mZXJlbmNlLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDIlIDUlIDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWIxOTE5ZDg7XHJcbiAgICBcclxuICAgICNwYXJ0aWNpcGFudHMtY29udGFpbmVyIHsgXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZ2FwOiA1cHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiA5MCU7XHJcblxyXG4gICAgICAgIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCgxKSxcclxuICAgICAgICAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoMSkgfiAqIHtcclxuICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucGFydGljaXBhbnQge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDAgY2FsYygoMTAwJSAtIDEwcHgpLzMpO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjU2NTY1YzM7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCA1cHggIzE3MTcxNztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCgyKSxcclxuICAgICAgICAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoMikgfiAqLFxyXG4gICAgICAgIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCg0KSxcclxuICAgICAgICAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoNCkgfiAqe1xyXG4gICAgICAgICAgICBmbGV4OiAwIDAgY2FsYygoMTAwJSAtIDVweCkvMik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoOCksXHJcbiAgICAgICAgLnBhcnRpY2lwYW50OmZpcnN0LWNoaWxkOm50aC1sYXN0LWNoaWxkKDgpIH4gKntcclxuICAgICAgICAgICAgZmxleDogMCAwIGNhbGMoKDEwMCUgLSAxNXB4KS80KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIjY29uZmVyZW5jZS1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAyJSA1JSAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI3LCAyNSwgMjUsIDAuODQ3MDU4ODIzNSk7XG59XG4jY29uZmVyZW5jZS1jb250YWluZXIgI3BhcnRpY2lwYW50cy1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogNXB4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA5MCU7XG59XG4jY29uZmVyZW5jZS1jb250YWluZXIgI3BhcnRpY2lwYW50cy1jb250YWluZXIgLnBhcnRpY2lwYW50OmZpcnN0LWNoaWxkOm50aC1sYXN0LWNoaWxkKDEpLFxuI2NvbmZlcmVuY2UtY29udGFpbmVyICNwYXJ0aWNpcGFudHMtY29udGFpbmVyIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCgxKSB+ICoge1xuICBmbGV4OiAwIDAgMTAwJTtcbn1cbiNjb25mZXJlbmNlLWNvbnRhaW5lciAjcGFydGljaXBhbnRzLWNvbnRhaW5lciAucGFydGljaXBhbnQge1xuICBmbGV4OiAwIDAgY2FsYygoMTAwJSAtIDEwcHgpIC8gMyk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAxLCAxMDEsIDEwMSwgMC43NjQ3MDU4ODI0KTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAxcHggMXB4IDVweCAjMTcxNzE3O1xufVxuI2NvbmZlcmVuY2UtY29udGFpbmVyICNwYXJ0aWNpcGFudHMtY29udGFpbmVyIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCgyKSxcbiNjb25mZXJlbmNlLWNvbnRhaW5lciAjcGFydGljaXBhbnRzLWNvbnRhaW5lciAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoMikgfiAqLFxuI2NvbmZlcmVuY2UtY29udGFpbmVyICNwYXJ0aWNpcGFudHMtY29udGFpbmVyIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCg0KSxcbiNjb25mZXJlbmNlLWNvbnRhaW5lciAjcGFydGljaXBhbnRzLWNvbnRhaW5lciAucGFydGljaXBhbnQ6Zmlyc3QtY2hpbGQ6bnRoLWxhc3QtY2hpbGQoNCkgfiAqIHtcbiAgZmxleDogMCAwIGNhbGMoKDEwMCUgLSA1cHgpIC8gMik7XG59XG4jY29uZmVyZW5jZS1jb250YWluZXIgI3BhcnRpY2lwYW50cy1jb250YWluZXIgLnBhcnRpY2lwYW50OmZpcnN0LWNoaWxkOm50aC1sYXN0LWNoaWxkKDgpLFxuI2NvbmZlcmVuY2UtY29udGFpbmVyICNwYXJ0aWNpcGFudHMtY29udGFpbmVyIC5wYXJ0aWNpcGFudDpmaXJzdC1jaGlsZDpudGgtbGFzdC1jaGlsZCg4KSB+ICoge1xuICBmbGV4OiAwIDAgY2FsYygoMTAwJSAtIDE1cHgpIC8gNCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["ParticipantComponent","Subscription","i0","ConferenceMainComponent","constructor","_conferenceService","_rtcService","userId","crypto","randomUUID","userName","_getNameFromCookies","_initEvents","_subscriptions","add","onConnected$","subscribe","console","log","getParticipants","getParticipants$","participants","onNewConnection$","participant","push","onRemoveConnection$","index","findIndex","p","id","splice","onToggleMicrophone$","event","participantCmp","participantElements","find","c","isMicroActive","isActive","onSendSignal$","signal","users$","matches","document","cookie","match","RegExp","replace","decodeURIComponent","ngOnInit","startConnection","ngAfterViewChecked","inputControls","currentParticipant","first","ngOnDestroy","unsubscribe","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\app\\conference-main\\conference-main.component.ts","D:\\Лабки\\VideoChat\\client\\src\\app\\conference-main\\conference-main.component.html"],"sourcesContent":["import { Component, Input, ViewChild, OnChanges, OnInit, ViewChildren, QueryList, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy } from '@angular/core';\nimport { ParticipantComponent } from '../participant/participant.component';\nimport { Participant } from 'src/model/participant';\nimport { ConferenceService } from 'src/service/conference.service';\nimport { InputControlsComponent } from '../input-controls/input-controls.component';\nimport { ToggleMicroEvent } from 'src/model/toggle-micro';\nimport { Subscription } from 'rxjs';\nimport { RtcService } from 'src/service/rtc.service';\n\n@Component({\n  selector: 'app-conference-main',\n  templateUrl: './conference-main.component.html',\n  styleUrls: ['./conference-main.component.scss']\n})\nexport class ConferenceMainComponent implements OnInit, AfterViewChecked, OnDestroy {\n  private _subscriptions = new Subscription();\n\n  public userId!: string;\n  public userName!: string;\n\n  @ViewChild(\"controls\") public inputControls! : InputControlsComponent;\n  @ViewChildren(ParticipantComponent) public participantElements! : QueryList<ParticipantComponent>;\n\n  public participants: Participant[] = [];\n\n  constructor(\n    private readonly _conferenceService: ConferenceService,\n    private readonly _rtcService: RtcService) {\n    this.userId = crypto.randomUUID();\n    this.userName = this._getNameFromCookies();\n    this._initEvents();\n  }\n\n  private _initEvents(): void {\n    this._subscriptions.add(this._conferenceService.onConnected$.subscribe(() => {\n      console.log(`Id: ${this.userId} Name: ${this.userName} - connected succesfully`);\n      this._conferenceService.getParticipants();\n    }));\n    this._subscriptions.add(this._conferenceService.getParticipants$.subscribe((participants: Participant[]) => {\n      this.participants = participants;\n    }));\n    this._subscriptions.add(this._conferenceService.onNewConnection$.subscribe((participant: Participant) => {\n      this.participants.push(participant);\n    }));\n    this._subscriptions.add(this._conferenceService.onRemoveConnection$.subscribe((participant: Participant) => {\n      let index = this.participants.findIndex(p => p.id === participant.id);\n      this.participants.splice(index, 1);\n    }));\n    this._subscriptions.add(this._conferenceService.onToggleMicrophone$.subscribe((event: ToggleMicroEvent) => {\n      let participantCmp = this.participantElements.find(c => c.participant.id === event.userId);\n      if (participantCmp) {\n        participantCmp.isMicroActive = event.isActive;\n      }\n    }));\n    this._subscriptions.add(this._conferenceService.onSendSignal$.subscribe((signal: string) => {\n      //this._rtcService.signalPeer()\n    }));\n    this._subscriptions.add(this._rtcService.users$?.subscribe((participants: Participant[]) => {\n      \n    });\n  }\n\n  private _getNameFromCookies(): string {\n    let matches = document.cookie.match(new RegExp(\n      \"(?:^|; )\" + \"name\".replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ))\n    return decodeURIComponent(matches![1]);\n  }\n\n  public ngOnInit() {\n    this._conferenceService.startConnection(this.userId, this.userName);\n  }\n\n  public ngAfterViewChecked() {\n    if (this.participantElements) {\n      this.inputControls.currentParticipant = this.participantElements.first;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._subscriptions.unsubscribe();  \n  }\n}\n","<div id=\"conference-container\">\n    <div id=\"participants-container\">\n        <div *ngFor=\"let participant of participants; let i = index\" class=\"participant\">\n            <app-participant [participant]=\"participant\"></app-participant>\n        </div>\n    </div>\n    <app-input-controls #controls></app-input-controls>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}