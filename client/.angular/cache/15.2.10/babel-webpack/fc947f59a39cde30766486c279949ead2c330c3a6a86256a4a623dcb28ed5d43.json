{"ast":null,"code":"import { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { from } from \"rxjs\";\nimport constants from \"src/constants\";\nexport class SignalR {\n  static #_ = this.connection = new HubConnectionBuilder().withUrl(constants.serverUrl + \"/conference\").build();\n  static connect() {\n    return from(SignalR.connection.start());\n  }\n  static startConnection(userId, userName) {\n    SignalR.connection.on(\"Connected\", () => {\n      console.log(`Id: ${userId} Name: ${userName} - connected succesfully`);\n      SignalR.connection.off(\"Connected\");\n    });\n    return SignalR.connection.send(\"Connect\", {\n      id: userId,\n      name: userName\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAwBA,oBAAoB,QAAQ,oBAAoB;AACxE,SAAqBC,IAAI,QAAQ,MAAM;AACvC,OAAOC,SAAS,MAAM,eAAe;AAErC,OAAM,MAAOC,OAAO;EAAA,YACF,eAAU,GAAkB,IAAIH,oBAAoB,EAAE,CAC/DI,OAAO,CAACF,SAAS,CAACG,SAAS,GAAG,aAAa,CAAC,CAACC,KAAK,EAAE;EAElD,OAAOC,OAAO;IACjB,OAAON,IAAI,CAACE,OAAO,CAACK,UAAU,CAACC,KAAK,EAAE,CAAC;EAC3C;EAEO,OAAOC,eAAe,CAACC,MAAc,EAAEC,QAAgB;IAC1DT,OAAO,CAACK,UAAU,CAACK,EAAE,CAAC,WAAW,EAAE,MAAK;MACpCC,OAAO,CAACC,GAAG,CAAC,OAAOJ,MAAM,UAAUC,QAAQ,0BAA0B,CAAC;MACtET,OAAO,CAACK,UAAU,CAACQ,GAAG,CAAC,WAAW,CAAC;IACvC,CAAC,CAAC;IACF,OAAOb,OAAO,CAACK,UAAU,CAACS,IAAI,CAAC,SAAS,EAAE;MAAEC,EAAE,EAAEP,MAAM;MAAEQ,IAAI,EAAEP;IAAQ,CAAE,CAAC;EAC7E","names":["HubConnectionBuilder","from","constants","SignalR","withUrl","serverUrl","build","connect","connection","start","startConnection","userId","userName","on","console","log","off","send","id","name"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\service\\signalr.utils.ts"],"sourcesContent":["import { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport { Observable, from } from \"rxjs\";\r\nimport constants from \"src/constants\";\r\n\r\nexport class SignalR {\r\n    public static connection: HubConnection = new HubConnectionBuilder()\r\n        .withUrl(constants.serverUrl + \"/conference\").build();\r\n        \r\n    public static connect() : Observable<void> {\r\n        return from(SignalR.connection.start());\r\n    }\r\n\r\n    public static startConnection(userId: string, userName: string) : Promise<void> {\r\n        SignalR.connection.on(\"Connected\", () => {\r\n            console.log(`Id: ${userId} Name: ${userName} - connected succesfully`);\r\n            SignalR.connection.off(\"Connected\");\r\n        });\r\n        return SignalR.connection.send(\"Connect\", { id: userId, name: userName });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}