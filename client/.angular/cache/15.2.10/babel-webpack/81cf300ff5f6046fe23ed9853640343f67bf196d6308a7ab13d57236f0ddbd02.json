{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from \"rxjs\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport constants from \"src/constants\";\nimport * as i0 from \"@angular/core\";\nexport let ConferenceService = /*#__PURE__*/(() => {\n  class ConferenceService {\n    constructor() {\n      this._getParticipants = new Subject();\n      this.getParticipants$ = this._getParticipants.asObservable();\n      this._onToggleMicrophone = new Subject();\n      this.onToggleMicrophone$ = this._onToggleMicrophone.asObservable();\n      this._onConnected = new Subject();\n      this.onConnected$ = this._onConnected.asObservable();\n      this._onNewConnection = new Subject();\n      this.onNewConnection$ = this._onNewConnection.asObservable();\n      this._onRemoveConnection = new Subject();\n      this.onRemoveConnection$ = this._onRemoveConnection.asObservable();\n      this._onSendSignal = new Subject();\n      this.onSendSignal$ = this._onSendSignal.asObservable();\n    }\n    _initListeners() {\n      if (!this._connection) {\n        return;\n      }\n      this._connection.on(\"Connected\", () => this._onConnected.next());\n      this._connection.on(\"OnToggleMicrophone\", event => this._onToggleMicrophone.next(event));\n      this._connection.on(\"OnNewConnection\", participant => this._onNewConnection.next(participant));\n      this._connection.on(\"OnRemoveConnection\", participant => this._onRemoveConnection.next(participant));\n      this._connection.on(\"OnSendSignal\", signal => this._onSendSignal.next(signal));\n    }\n    startConnection(userId, userName) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this._connection = new HubConnectionBuilder().withUrl(constants.serverUrl + \"/conference\").build();\n        yield _this._connection.start();\n        _this._initListeners();\n        _this._connection.send(\"Connect\", {\n          id: userId,\n          name: userName\n        });\n      })();\n    }\n    getParticipants() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        let participants = yield _this2._connection?.invoke(\"GetParticipants\");\n        if (participants) {\n          _this2._getParticipants.next(participants);\n        }\n      })();\n    }\n    sendSignalToAll(signal) {\n      this._connection?.invoke(\"SendSignal\", signal);\n    }\n    static #_ = this.ɵfac = function ConferenceService_Factory(t) {\n      return new (t || ConferenceService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConferenceService,\n      factory: ConferenceService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n  return ConferenceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}