{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u041B\\u0430\\u0431\\u043A\\u0438/VideoChat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nlet ParticipantComponent = class ParticipantComponent {\n  constructor(_signalR) {\n    this._signalR = _signalR;\n    this._subscriptions = new Subscription();\n    this.peerConnection = new RTCPeerConnection();\n    this.isMicroActive = false;\n  }\n  ngOnInit() {\n    var _this = this;\n    let stream = this.participant.stream;\n    stream.getTracks().forEach(track => {\n      this.peerConnection.addTrack(track, stream);\n    });\n    this._signalR.onOffer$.subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (offerEvent) {\n        let offer = JSON.parse(offerEvent.offerJson);\n        _this.peerConnection.onicecandidate = /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (event) {\n            if (event.candidate) {\n              _this._signalR.sendAnswer(offerEvent.userId, _this.peerConnection.localDescription);\n            }\n          });\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n        yield _this.peerConnection.setRemoteDescription(offer);\n        let answer = yield _this.peerConnection.createAnswer();\n        yield _this.peerConnection.setLocalDescription(answer);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.peerConnection.ontrack = event => {\n      event.streams[0].getTracks().forEach(track => {\n        this.participant.stream.addTrack(track);\n      });\n    };\n  }\n  ngOnDestroy() {\n    this.peerConnection.close();\n    this._subscriptions.unsubscribe();\n  }\n};\n__decorate([ViewChild(\"video\")], ParticipantComponent.prototype, \"videoEl\", void 0);\n__decorate([Input()], ParticipantComponent.prototype, \"participant\", void 0);\nParticipantComponent = __decorate([Component({\n  selector: 'app-participant',\n  templateUrl: './participant.component.html',\n  styleUrls: ['./participant.component.scss']\n})], ParticipantComponent);\nexport { ParticipantComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,EAAcC,KAAK,EAAEC,SAAS,QAAmC,eAAe;AAClG,SAAkBC,YAAY,QAAQ,MAAM;AAYrC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAU/BC,YAA6BC,QAAwB;IAAxB,aAAQ,GAARA,QAAQ;IAN7B,mBAAc,GAAG,IAAIH,YAAY,EAAE;IAEpC,mBAAc,GAAsB,IAAII,iBAAiB,EAAE;IAE3D,kBAAa,GAAG,KAAK;EAG5B;EAEOC,QAAQ;IAAA;IACb,IAAIC,MAAM,GAAG,IAAI,CAACC,WAAW,CAACD,MAAM;IACpCA,MAAM,CAACE,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;MACnC,IAAI,CAACC,cAAc,CAACC,QAAQ,CAACF,KAAK,EAAEJ,MAAM,CAAC;IAC7C,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACU,QAAQ,CAACC,SAAS;MAAA,6BAAC,WAAOC,UAAsB,EAAI;QAChE,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAACI,SAAS,CAA8B;QACzE,KAAI,CAACR,cAAc,CAACS,cAAc;UAAA,8BAAG,WAAOC,KAAK,EAAI;YACnD,IAAGA,KAAK,CAACC,SAAS,EAAC;cACjB,KAAI,CAACnB,QAAQ,CAACoB,UAAU,CAACR,UAAU,CAACS,MAAM,EAAE,KAAI,CAACb,cAAc,CAACc,gBAAiB,CAAC;;UAEtF,CAAC;UAAA;YAAA;UAAA;QAAA;QACD,MAAM,KAAI,CAACd,cAAc,CAACe,oBAAoB,CAACV,KAAK,CAAC;QACrD,IAAIW,MAAM,SAAS,KAAI,CAAChB,cAAc,CAACiB,YAAY,EAAE;QACrD,MAAM,KAAI,CAACjB,cAAc,CAACkB,mBAAmB,CAACF,MAAM,CAAC;MACvD,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC;IACF,IAAI,CAAChB,cAAc,CAACmB,OAAO,GAAIT,KAAK,IAAI;MACtCA,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC,CAACvB,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;QAC7C,IAAI,CAACH,WAAW,CAACD,MAAM,CAACM,QAAQ,CAACF,KAAK,CAAC;MACzC,CAAC,CAAC;IACJ,CAAC;EACH;EAEOsB,WAAW;IAChB,IAAI,CAACrB,cAAc,CAACsB,KAAK,EAAE;IAC3B,IAAI,CAACC,cAAc,CAACC,WAAW,EAAE;EACnC;CACD;AAvCqBC,YAAnBrC,SAAS,CAAC,OAAO,CAAC,qDAA8B;AACxCqC,YAARtC,KAAK,EAAE,yDAAqC;AAFlCG,oBAAoB,eALhCJ,SAAS,CAAC;EACTwC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtC,oBAAoB,CAwChC;SAxCYA,oBAAoB","names":["Component","Input","ViewChild","Subscription","ParticipantComponent","constructor","_signalR","RTCPeerConnection","ngOnInit","stream","participant","getTracks","forEach","track","peerConnection","addTrack","onOffer$","subscribe","offerEvent","offer","JSON","parse","offerJson","onicecandidate","event","candidate","sendAnswer","userId","localDescription","setRemoteDescription","answer","createAnswer","setLocalDescription","ontrack","streams","ngOnDestroy","close","_subscriptions","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\app\\participant\\participant.component.ts"],"sourcesContent":["import { Component, ElementRef, Input, ViewChild, OnInit, OnDestroy, Output } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { AnswerEvent } from 'src/model/answer-event';\nimport { OfferEvent } from 'src/model/offer-event';\nimport { RtcParticipant } from 'src/model/rtc-participant';\nimport { SignalRService } from 'src/service/signalr.service';\nimport { RtcService } from 'src/service/rtc.service';\n\n@Component({\n  selector: 'app-participant',\n  templateUrl: './participant.component.html',\n  styleUrls: ['./participant.component.scss']\n})\nexport class ParticipantComponent implements OnInit, OnDestroy {\n  @ViewChild(\"video\") public videoEl! : ElementRef;\n  @Input() public participant!: RtcParticipant;\n\n  private _subscriptions = new Subscription();\n\n  public peerConnection: RTCPeerConnection = new RTCPeerConnection();\n\n  public isMicroActive = false;\n\n  constructor(private readonly _signalR: SignalRService) {\n  }\n\n  public ngOnInit() {\n    let stream = this.participant.stream;\n    stream.getTracks().forEach((track) => {\n      this.peerConnection.addTrack(track, stream);\n    });\n    this._signalR.onOffer$.subscribe(async (offerEvent: OfferEvent) => {\n      let offer = JSON.parse(offerEvent.offerJson) as RTCSessionDescriptionInit;\n      this.peerConnection.onicecandidate = async (event) => {\n        if(event.candidate){\n          this._signalR.sendAnswer(offerEvent.userId, this.peerConnection.localDescription!);\n        }\n      };\n      await this.peerConnection.setRemoteDescription(offer);\n      let answer = await this.peerConnection.createAnswer();\n      await this.peerConnection.setLocalDescription(answer); \n    });\n    this.peerConnection.ontrack = (event) => {\n      event.streams[0].getTracks().forEach((track) => {\n        this.participant.stream.addTrack(track);\n      });\n    };\n  }\n\n  public ngOnDestroy(): void {\n    this.peerConnection.close();\n    this._subscriptions.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}