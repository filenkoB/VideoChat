{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class RtcService {\n  constructor() {\n    this._onIceCandidate = new Subject();\n    this.onIceCandidate$ = this._onIceCandidate.asObservable();\n  }\n  _initPeerEvents(peer, onSignal, onStream) {\n    peer.on('signal', data => {\n      onSignal.next(JSON.stringify(data));\n    });\n    peer.on('stream', stream => {\n      onStream.next(stream);\n    });\n  }\n  createPeer(stream, initiator, onSignal) {\n    const peer = new window[\"SimplePeer\"]({\n      initiator,\n      stream,\n      trickle: false\n    });\n    peer.on('signal', data => {\n      onSignal.next(JSON.stringify(data));\n    });\n    return peer;\n  }\n  createRemotePeer(initiator, onSignal, onStream) {\n    const peer = new window[\"SimplePeer\"]({\n      initiator,\n      trickle: false\n    });\n    this._initPeerEvents(peer, onSignal, onStream);\n    return peer;\n  }\n  static #_ = this.ɵfac = function RtcService_Factory(t) {\n    return new (t || RtcService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RtcService,\n    factory: RtcService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAI9B,OAAM,MAAOC,UAAU;EADvBC;IAEY,oBAAe,GAAG,IAAIF,OAAO,EAAO;IACrC,oBAAe,GAAG,IAAI,CAACG,eAAe,CAACC,YAAY,EAAE;;EAEpDC,eAAe,CAACC,IAAyB,EAAEC,QAAyB,EAAEC,QAA8B;IACxGF,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAGC,IAA2B,IAAI;MAC9CH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;IAEFJ,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAGK,MAAmB,IAAI;MACtCN,QAAQ,CAACG,IAAI,CAACG,MAAM,CAAC;IACzB,CAAC,CAAC;EACN;EAEOC,UAAU,CAACD,MAAmB,EAAEE,SAAkB,EAAET,QAAyB;IAChF,MAAMD,IAAI,GAAG,IAAKW,MAAc,CAAC,YAAY,CAAC,CAAC;MAAED,SAAS;MAAEF,MAAM;MAAEI,OAAO,EAAE;IAAK,CAAE,CAAC;IACrFZ,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAGC,IAA2B,IAAI;MAC9CH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;IACF,OAAOJ,IAAI;EACf;EAEOa,gBAAgB,CAACH,SAAkB,EAAET,QAAyB,EAAEC,QAA8B;IACjG,MAAMF,IAAI,GAAG,IAAKW,MAAc,CAAC,YAAY,CAAC,CAAC;MAAED,SAAS;MAAEE,OAAO,EAAE;IAAK,CAAE,CAAC;IAC7E,IAAI,CAACb,eAAe,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAC9C,OAAOF,IAAI;EACf;EAAC;qBA1BQL,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAmB,SAAVnB,UAAU;IAAAoB,YADG;EAAM","names":["Subject","RtcService","constructor","_onIceCandidate","asObservable","_initPeerEvents","peer","onSignal","onStream","on","data","next","JSON","stringify","stream","createPeer","initiator","window","trickle","createRemotePeer","factory","providedIn"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\service\\rtc.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport * as SimplePeer from \"simple-peer\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RtcService {\r\n    private _onIceCandidate = new Subject<any>();\r\n    public onIceCandidate$ = this._onIceCandidate.asObservable();\r\n\r\n    private _initPeerEvents(peer: SimplePeer.Instance, onSignal: Subject<string>, onStream: Subject<MediaStream>) {\r\n        peer.on('signal', (data: SimplePeer.SignalData) => {\r\n            onSignal.next(JSON.stringify(data));\r\n        });\r\n    \r\n        peer.on('stream', (stream: MediaStream) => {\r\n            onStream.next(stream);\r\n        });\r\n    }\r\n\r\n    public createPeer(stream: MediaStream, initiator: boolean, onSignal: Subject<string>): SimplePeer.Instance {\r\n        const peer = new (window as any)[\"SimplePeer\"]({ initiator, stream, trickle: false });\r\n        peer.on('signal', (data: SimplePeer.SignalData) => {\r\n            onSignal.next(JSON.stringify(data));\r\n        });\r\n        return peer;\r\n    }\r\n\r\n    public createRemotePeer(initiator: boolean, onSignal: Subject<string>, onStream: Subject<MediaStream>): SimplePeer.Instance {\r\n        const peer = new (window as any)[\"SimplePeer\"]({ initiator, trickle: false });\r\n        this._initPeerEvents(peer, onSignal, onStream);\r\n        return peer;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}