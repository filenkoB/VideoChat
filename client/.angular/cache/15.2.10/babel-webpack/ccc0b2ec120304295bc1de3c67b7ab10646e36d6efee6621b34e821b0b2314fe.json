{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RtcService {\n  createPeer(stream) {\n    const peer = new RTCPeerConnection();\n    peer.ontrack = event => {\n      event.streams[0].getTracks().forEach(track => {\n        stream.addTrack(track);\n      });\n    };\n    return peer;\n  }\n  static #_ = this.ɵfac = function RtcService_Factory(t) {\n    return new (t || RtcService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RtcService,\n    factory: RtcService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,UAAU;EACZC,UAAU,CAACC,MAAmB;IACjC,MAAMC,IAAI,GAAG,IAAIC,iBAAiB,EAAE;IACpCD,IAAI,CAACE,OAAO,GAAIC,KAAK,IAAI;MACrBA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAI;QAC3CR,MAAM,CAACS,QAAQ,CAACD,KAAK,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC;IACD,OAAOP,IAAI;EACf;EAAC;qBATQH,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAY,SAAVZ,UAAU;IAAAa,YADG;EAAM","names":["RtcService","createPeer","stream","peer","RTCPeerConnection","ontrack","event","streams","getTracks","forEach","track","addTrack","factory","providedIn"],"sourceRoot":"","sources":["D:\\Лабки\\VideoChat\\client\\src\\service\\rtc.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport * as SimplePeer from \"simple-peer\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RtcService {\r\n    public createPeer(stream: MediaStream): RTCPeerConnection {\r\n        const peer = new RTCPeerConnection();\r\n        peer.ontrack = (event) => {\r\n            event.streams[0].getTracks().forEach((track) => {\r\n                stream.addTrack(track);\r\n            });\r\n        };\r\n        return peer;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}